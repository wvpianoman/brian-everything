# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]; then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions
if [ -d ~/.bashrc.d ]; then
    for rc in ~/.bashrc.d/*; do
        if [ -f "$rc" ]; then
            . "$rc"
        fi
    done
fi
unset rc

###---------- ALIASES ----------###
# source ~/.bashrc

# echo "" && fortune && echo ""

alias alert='notify-send --urgency=low "$(history|tail -n1|sed -e "s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//")"'
alias tolga='sudo bash -c "$(curl -fsSL https://raw.githubusercontent.com/tolgaerok/scripts/main/Fedora39/TolgaFedora39.sh)"'

alias systcl="sudo /home/tolga/scripts/systcl.sh"

###---------- my tools ----------###
alias htos="sudo ~/.config/MY-TOOLS/assets/scripts/Zysnc-Options/ZYSNC-HOME-TO-SERVER.sh"
alias mount="sudo ~/.config/MY-TOOLS/assets/scripts/Mounting-Options/MOUNT-ALL.sh"
alias mse="sudo ~/scripts/MYTOOLS/mse.sh"
alias stoh="sudo ~/.config/MY-TOOLS/assets/scripts/Zysnc-Options/ZYSNC-SERVER-TO-HOME.sh"
alias umount="sudo ~/.config/MY-TOOLS/assets/scripts/Mounting-Options/UMOUNT-ALL.sh"

###---------- fun stuff ----------###
alias pics="sxiv -t $HOME/Pictures/CUSTOM-WALLPAPERS/"
alias wp="sxiv -t $HOME/Pictures/Wallpaper/"

###---------- navigate files and directories ----------###
alias ..="cd .."
alias cl="clear"
alias copy="rsync -P"
alias la="lsd -a"
alias ll="lsd -l"
alias Ls="lsd"
alias ls="ls --color=auto"
alias dir="dir --color=auto"
alias lsla="lsd -la"

# alias chmod commands
alias 000='sudo chmod -R 000'
alias 644='sudo chmod -R 644'
alias 666='sudo chmod -R 666'
alias 755='sudo chmod -R 755'
alias 777='sudo chmod -R 777'
alias mx='sudo chmod a+x'

# Search command line history
alias h="history | grep "

# Search running processes
alias p="ps aux | grep "
alias topcpu="/bin/ps -eo pcpu,pid,user,args | sort -k 1 -r | head -10"

# Search files in the current folder
alias f="find . | grep "

# Alias's for safe and forced reboots
alias rebootforce='sudo shutdown -r -n now'
alias rebootsafe='sudo shutdown -r now'

###---------- Tools ----------###
alias rc="source ~/.bashrc && clear && echo "" && fortune | lolcat  && echo """
alias bashrc='kwrite  ~/.bashrc'
alias cong="sysctl net.ipv4.tcp_congestion_control"
alias fmem="echo && echo 'Current mem:' && free -h && sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches' && echo && echo 'After: ' && free -h"
alias fmem2="echo && echo 'Current mem:' && free -h && sudo /bin/sh -c '/bin/sync && /sbin/sysctl -w vm.drop_caches=3' && echo && echo 'After: ' && free -h"
alias fstab="sudo mount -a && sudo systemctl daemon-reload && echo && echo \"Reloading of fstab done\" && echo"
alias grub="sudo grub2-mkconfig -o /boot/grub2/grub.cfg && sudo grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg"
alias io="cat /sys/block/sda/queue/scheduler"
alias line="echo '## ------------------------------ ##'"
# alias nvidia="sudo systemctl enable --now akmods --force && sudo dracut --force && echo && echo \"Force akmods and Dracut on nvidia done\" && echo"
alias nvidia='sudo systemctl enable --now akmods --force && sudo dracut --force && echo && echo "Force akmods and Dracut on NVIDIA done" && echo'

alias pdfcompress='bash /home/tolga/scripts/pdf1.sh'
alias samba='gum spin --spinner dot --title "Restarting Samba" -- sleep 2 && sudo systemctl enable smb.service nmb.service && sudo systemctl restart smb.service nmb.service'
alias swapreload="cl && echo && echo 'Turning swap off:' && echo 'Turning swap on:' && line && sudo swapon --all && sudo swapon --show && echo && echo 'Reload Swap(s):' && line && sudo mount -a && sudo systemctl daemon-reload && sudo swapon --show && echo && echo 'Free memory:' && line && free -h && echo && duf && sys && fmem"
alias sys="echo && io && echo && cong && echo && echo 'ZSWAP status: ( Y = ON )' && cat /sys/module/zswap/parameters/enabled && systemctl restart earlyoom && systemctl status earlyoom --no-pager"
alias trim="sudo fstrim -av"
alias update="sudo dnf5 update && sudo dnf update && flatpak update -y && flatpak uninstall --unused && flatpak uninstall --delete-data && [ -f /usr/bin/flatpak ] && flatpak uninstall --unused --delete-data --assumeyes"
alias sysctl-reload="sudo udevadm control --reload-rules && sudo udevadm trigger && sudo sysctl --system && sudo sysctl -p && sudo mount -a && sudo systemctl daemon-reload"

###---------- file access ----------###
alias bconf="vim ~/.config/bash/.bashrc"
alias cp="cp -riv"
alias htos='sudo ~/.config/MY-TOOLS/assets/scripts/Zysnc-Options/ZYSNC-HOME-TO-SERVER.sh'
alias mkdir="mkdir -vp"
alias mount='sudo ~/.config/MY-TOOLS/assets/scripts/Mounting-Options/MOUNT-ALL.sh'
alias mse='sudo ~/scripts/MYTOOLS/MAKE-SCRIPTS-EXECUTABLE.sh'
alias mv="mv -iv"
alias mynix='sudo ~/.config/MY-TOOLS/assets/scripts/COMMAN-NIX-COMMAND-SCRIPT/MyNixOS-commands.sh'
alias stoh='sudo ~/.config/MY-TOOLS/assets/scripts/Zysnc-Options/ZYSNC-SERVER-TO-HOME.sh'
alias trimgen='sudo ~/.config/MY-TOOLS/assets/scripts/GENERATION-TRIMMER/TrimmGenerations.sh'
alias umount='sudo ~/.config/MY-TOOLS/assets/scripts/Mounting-Options/UMOUNT-ALL.sh'
alias zconf="vim ~/.config/zsh/.zshrc"

alias cj="sudo journalctl --rotate; sudo journalctl --vacuum-time=1s"

alias batt='clear && echo "Battery: $(acpi -b | awk '\''{print $3}'\'')" && echo '' && echo "Battery Percentage: $(acpi -b | awk '\''{print $4}'\'')" && echo '' && echo "Remaining Time: $(acpi -b | awk '\''{print $5,$6,$7 == "until" ? "until fully charged" : $7}'\'')"'

###---------- session ----------###
alias sess='session=$XDG_SESSION_TYPE && echo "" && gum spin --spinner dot --title "Current XDG session is: [ $session ] """ -- sleep 2'

###---------- Nvidia session ----------###
export LIBVA_DRIVER_NAME=nvidia
export WLR_NO_HARDWARE_CURSORS=1
export __GLX_VENDOR_LIBRARY_NAME=nvidia
export __GL_SHADER_CACHE=1
export __GL_THREADED_OPTIMIZATION=1

###---------- BTRFS TOOLS ----------######
alias balance-home="sudo btrfs balance start /home && sudo btrfs balance status /home"
alias balance-root="sudo btrfs balance start / && sudo btrfs balance status /"
alias scrub-home="sudo btrfs scrub start /home && sudo btrfs scrub status /home"
alias scrub-root="sudo btrfs scrub start / && sudo btrfs scrub status /"

###---------- Konsole effects ----------###
PS1="\[\e[1;m\]┌(\[\e[1;32m\]\u\[\e[1;34m\]@\h\[\e[1;m\]) \[\e[1;m\]➤\[\e[1;36m\] \W \[\e[1;m\] \n\[\e[1;m\]└\[\e[1;33m\]➤\[\e[0;m\]  "

###---------- Nix package manager ----------###
# export PATH="/home/tolga/.nix-profile/bin:$PATH"
# . /home/tolga/.nix-profile/etc/profile.d/nix.sh

###---------- Vscoding ----------###
# eval "$(direnv hook bash)"

###---------- Solus related ----------###
alias solus='sudo mount -a && sudo systemctl daemon-reload && sudo udevadm control --reload-rules && sudo udevadm trigger && sudo sysctl --system'

# Function to generate a random color code
random_color() {
    echo $((16 + RANDOM % 216))
}

# Function to generate a random color code
random_color() {
    echo $((16 + RANDOM % 216))
}

# Define colors
YELLOW=226
WHITE=231
BRIGHT_BLUE=81

# Function to display fortune with random colors
fortune_with_random_colors() {
    local color
    color=$(random_color)
    printf "\033[38;5;%dm%s\033[0m\n" "$color" "$1"
}

# Check if the system is Solus
if [ -f "/usr/bin/eopkg" ]; then
    # Solus system
    export PATH="/home/terok/.nix-profile/bin:$PATH"
    FORTUNE_COMMAND="/home/terok/.nix-profile/bin/fortune"
else
    # Other distro
    FORTUNE_COMMAND="fortune"
fi

# Fetch the fortune message
fortune_message="$($FORTUNE_COMMAND)"

# Display the fortune message with random colors
#echo "" && fortune_with_random_colors "$fortune_message" && echo ""

# nix-env -iA nixpkgs.fortune
# export NIXPKGS_ALLOW_UNFREE=1 && nix-env -iA nixpkgs.megasync

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

XDG_DESKTOP_DIR="$HOME/"
XDG_DOWNLOAD_DIR="$HOME/"
XDG_DOCUMENTS_DIR="$HOME/"
XDG_MUSIC_DIR="$HOME/"
XDG_PICTURES_DIR="$HOME/"
XDG_VIDEOS_DIR="$HOME/"
XDG_TEMPLATES_DIR="$HOME/Templates"
XDG_PUBLICSHARE_DIR="$HOME/Public"

# Check whether if the windowing system is Xorg or Wayland windowing system and set environment variables accordingly
if [[ ${XDG_SESSION_TYPE} == "wayland" ]]; then
    export MOZ_ENABLE_WAYLAND=1
    export OBS_USE_EGL=1
    echo "Running on Wayland: Enabled Wayland-specific settings."
    echo "" && sleep 1

elif [[ ${XDG_SESSION_TYPE} == "x11" ]]; then
    export MOZ_ENABLE_WAYLAND=0
    export OBS_USE_EGL=0
    echo "Running on Xorg: Disabled Wayland-specific settings."
    echo "" && sleep 1
else
    echo "Unknown windowing system: ${XDG_SESSION_TYPE}. No changes made."
    echo "" && sleep 1
fi

# Check if qt5ct is installed and set QT/Kvantum theme settings
if command -v qt5ct &>/dev/null; then
    export QT_QPA_PLATFORM="xcb"
    export QT_QPA_PLATFORMTHEME="qt5ct"
    echo "qt5ct is installed: QT settings applied."
    echo "" && sleep 1
else
    echo "qt5ct is not installed: QT settings not applied."
    echo "You can install qt5ct with: sudo dnf install qt5ct"
    echo "" && sleep 1
fi

cl && echo "" && fortune | lolcat && echo ""

