#!/bin/bash
### #!/usr/bin/env bash

# Brian Francisco
# Personal use case packages
# 27 Feb 2024

#   《˘ ͜ʖ ˘》
#
#  ███████╗ ██████╗ ███████╗████████╗██╗    ██╗ █████╗ ██████╗ ███████╗    ██████╗ ██╗  ██╗ ██████╗ ███████╗
#  ██╔════╝██╔═══██╗██╔════╝╚══██╔══╝██║    ██║██╔══██╗██╔══██╗██╔════╝    ██╔══██╗██║ ██╔╝██╔════╝ ██╔════╝
#  ███████╗██║   ██║█████╗     ██║   ██║ █╗ ██║███████║██████╔╝█████╗      ██████╔╝█████╔╝ ██║  ███╗███████╗
#  ╚════██║██║   ██║██╔══╝     ██║   ██║███╗██║██╔══██║██╔══██╗██╔══╝      ██╔═══╝ ██╔═██╗ ██║   ██║╚════██║
#  ███████║╚██████╔╝██║        ██║   ╚███╔███╔╝██║  ██║██║  ██║███████╗    ██║     ██║  ██╗╚██████╔╝███████║
#  ╚══════╝ ╚═════╝ ╚═╝        ╚═╝    ╚══╝╚══╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝    ╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚══════╝
#
# https://patorjk.com/software/taag/#p=display&c=bash&f=ANSI%20Shadow&t=Software%20Pkgs


# Install some software:

# Tolga Erok
# for
# Brian
# 4/3/2024

# Function to install packages using apt package manager (Debian)
install_debian_packages() {
    local software_packages=("$@")
    echo "The following packages will be installed:"
    for ((i = 0; i < ${#software_packages[@]}; i++)); do
        echo "- ${software_packages[i]}"
        echo "Explanation: ${software_explanations[i]}"
        sleep 3
    done

    read -p "Do you want to proceed with the installation? (y/n): " choice

    if [[ $choice =~ ^[Yy]$ ]]; then
        echo "Installing the packages using apt..."
        sudo apt install -y --install-recommends "${software_packages[@]}"
        echo "Package installation completed."
    else
        echo "Package installation skipped."
    fi
}

# Function to install packages using dnf package manager (Fedora)
install_fedora_packages() {
    local software_packages=("$@")
    echo "The following packages will be installed:"
    for ((i = 0; i < ${#software_packages[@]}; i++)); do
        echo "- ${software_packages[i]}"
        echo "Explanation: ${software_explanations[i]}"
        sleep 3
    done

    read -p "Do you want to proceed with the installation? (y/n): " choice

    if [[ $choice =~ ^[Yy]$ ]]; then
        echo "Installing the packages using dnf..."
        sudo dnf install -y "${software_packages[@]}"
        echo "Package installation completed."
    else
        echo "Package installation skipped."
    fi
}

# Function to install packages using eopkg package manager (Solus)
install_solus_packages() {
    local software_packages=("$@")
    echo "The following packages will be installed:"
    for ((i = 0; i < ${#software_packages[@]}; i++)); do
        echo "- ${software_packages[i]}"
        echo "Explanation: ${software_explanations[i]}"
        sleep 3
    done

    read -p "Do you want to proceed with the installation? (y/n): " choice

    if [[ $choice =~ ^[Yy]$ ]]; then
        echo "Installing the packages using eopkg..."
        sudo eopkg install -y "${software_packages[@]}"
        echo "Package installation completed."
    else
        echo "Package installation skipped."
    fi
}
# Check distribution type (Debian, Fedora or Solus) and call respective function from above
if [ -f /etc/debian_version ]; then
    echo "Debian-based distribution detected."
    install_debian_packages "${software_packages[@]}"
elif [ -f /etc/redhat-release ]; then
    echo "Fedora-based distribution detected."
    install_fedora_packages "${software_packages[@]}"
elif [ -f /usr/bin/eopkg ]; then
    echo "Solus-based distribution detected."
    install_solus_packages "${software_packages[@]}"
    else
    echo "Unsupported distribution."
fi

# Function to install packages using apt package manager (debian)
install_debian_packages() {
    local software_packages=("$@")
    echo "The following packages will be installed:"
    for ((i = 0; i < ${#software_packages[@]}; i++)); do
        echo "- ${software_packages[i]}"
        echo "Explanation: ${software_explanations[i]}"
        sleep 3
    done

    read -p "Do you want to proceed with the installation? (y/n): " choice

    if [[ $choice =~ ^[Yy]$ ]]; then
        echo "Installing the packages using apt..."
        sudo apt install -y --install-recommends "${software_packages[@]}"
        echo "Package installation completed."
    else
        echo "Package installation skipped."
    fi
}

# Software packages to be installed in an array/index
declare -a software_packages=(
    acl aria2 attr autoconf automake bash-completion bc binutils btop busybox python-certifi cifs-utils cjson curl dbus-glib dconf-editor dialog duf easyeffects espeak-ng fastfetch ffmpeg ffmpeg-docs ffmpegthumbnailer ffmpegthumbs flatpak font-manager font-noto-cjk noto-{sans,serif}-ttf fzf git gnome-font-viewer grep grub-customizer gstreamer-1.0 gstreamer-1.0-libav gstreamer1.0-plugins-{bad,base,good,ugly} gstreamer-vaapi gufw intel-media-driver iptables jq kate libavcodec-{free,freeworld} libdvdcss libfreeaptx librist libsodium libtool libva-intel-driver libva-utils libvdpau libvdpau-va-gl libXext lm_sensors lsd make mbedtls meld mesa-lib mpg123 nano nanorc neofetch neovim neovim-qt net-snmp network-manager network-manager-docs nftables openssh openssl p7zip PackageKit pandoc pip pkg-config plocate pluginskdegraphics-thumbnailers psensors powertop pulseeffects python3 qrencode radeon-profile rclone rclone-browser ripgrep ripgrep-all rsync rygel sassc screen socat openssl-devel sshpass sxiv tar thermald tlp tumbler tumbler-extra ufw un{zip,rar} variety vgrep vim virt-manager wget wsdd xclip xorg-x11-fonts-ISO8859-1-100dpi
    zip zram-generator zram-generator-defaults zstd
    )

# Explanations..tried my best to explain them
declare -a software_explanations=(
    "acl                               Access control list utilities for file permissions management."
    "aria2                             High speed download utility"
    "attr                              Tools for managing extended attributes on filesystems."
    "automake                          A GNU tool for automatically creating Makefiles"
    "autoconf                          A GNU tool for automatically configuring source code"
    "bash-completion                   Programmable completion for Bash"
    "bc                                The GNU bc arbitrary precision calculator language"
    "binutils                          Binutils contains a linker, an assembler, and other tools for handling object files"
    "btop                              Modern and colorful command line resource monitor that shows usage and stats"
    "busybox                           Statically linked binary providing simplified versions of system commands"
    "python-certifi                    The Mozilla CA root certificate bundle"
    "cifs-utils                        Utilities for mounting and managing CIFS/SMB file systems."
    "cjson                             Ultralightweight JSON parser in ANSI C"
    "curl                              A utility for getting files from remote servers (FTP, HTTP, and others)"
    "dbus-glib                         GLib bindings for D-Bus"
    "dconf-editor                      Configuration editor for dconf"
    "dialog                            A utility for creating TTY dialog boxes"
    "duf                               Disk Usage/Free Utility"
    "easyeffects                       Audio effects for PipeWire applications"
    "espeak-ng                         eSpeak Next Geberation open source speech synthesizer"
    "fastfetch                         Like neofetch, but much faster because written in c"
    "fd                                Fd is a simple, fast and user-friendly alternative to find"
    "ffmpeg                            Complete, cross-platform solution for recording, converting, and streaming audio and video."
    "ffmpeg-docs                       Documentation for ffmpeg"
    "ffmpegthumbnailer                 Lightweight video thumbnailer that can be used by file managers"
    "ffmpegthumbs                      KDE ffmpegthumbnailer service"
    "flatpak                           Application sandboxing and distribution framework."
    "font-adobe-100dpi                 X.Org fonts: font-adobe-100dpi"
    "font-manager                      font management application for the GNOME desktop"
    "font-noto-cjk                     Noto CJK fonts"
    "fzf                               A command-line fuzzy finder written in Go"
    "git                               Fast Version Control System"
    "gnome-font-viewer                 Utility for previewing fonts for GNOME"
    "grep                              GNU grep. egrep and fgrep"
    "grub-customizer                   GUI to configure GRUB2 and BURG"
    "gstreamer-1.0                     Streaming media framework"
    "gstreamer-1.0-libav               GStreamer plugins for the libav codec library."
    "gstreamer-1.0-plugins-bad         GStreamer plugins from the 'bad' set (+ extras)."
    "gstreamer-1.0-plugins-good        GStreamer plugins with good code and licensing (+ extras)"
    "gstreamer-1.0-plugins-ugly        GStreamer plugins from the 'ugly' set (+ free)."
    "gstreamer-vaapi                   GStreamer plugins for video decoding/encoding using VA-API."
    "gufw                              GUFW GUI interface for UFW Firewall"
    "intel-media-driver                The Intel Media Driver for VAAPI"
    "iptables                          allows a sys admin to configure the IP packet filter rules of the Linux kernel firewall"
    "jq                                Command-line JSON processor"
    "kate                              Advanced Text Editor"
    "kdegraphics-thumbnailers          Graphics file format thumbnailers for KDE."
    "libdvdcss                         A portable abstraction library for DVD decryption"
	"libfreeaptx                       Oplibgcab1en Source implementation of Audio Processing Technology codec (aptX)"
	"librist                           Library for Reliable Internet Stream Transport (RIST) protocol"
    "libsodium                         The Sodium crypto library"
    "libtool                           The GNU Portable Library Tool"
    "libva-intel-driver                HW video decode support for Intel integrated graphics"
    "libva-utils                       Libva-utils is a collection of tests for VA-API (VIdeo Acceleration API)"
    "libvdpau                          Wrapper library for the Video Decode and Presentation API"
    "libvdpau-va-gl                    VDPAU driver with OpenGL/VAAPI back-end"
    "libXext                           X.Org X11 libXext runtime library"
    "lm_sensors                        User space hardware monitoring"
    "lsd                               ls command with a lot of pretty colors and some other stuff"
    "make                              A GNU tool which simplifies the build process for users"
    "mbedtls                           Light-weight cryptographic and SSL/TLS library"
    "meld                              graphical tool to diff and merge files"
    "mesa-lib                          Mesa is an OpenGL compatible 3D graphics library"
    "mozilla-ublock-origin             An efficient blocker for Firefox"
    "mpg123                            Real time MPEG 1.0/2.0/2.5 audio player/decoder for layers 1, 2 and 3"
    "nano                              A small text editor"
    "nanorc                            Improved Nano Syntax Highlighting Files"
    "neofetch                          Fast, highly customizable system info script."
    "neovim                            Vim-fork focused on extensibility and agility"
    "neovim-qt                         Qt GUI for Neovim"
    "net-snmp                          A collection of SNMP (Simple Network Management Protocol) tools and libraries"
    "network-manager                   Simple networking"
    "network-manager-docs              Documentation for network-manager"
    "nftables                          Netfilter Tables userspace utilites (replaces the popular iptables/ebtables)"
    "noto-sans-ttf                     Noto Sans Fonts (Multi-lingual and Emoji)"
    "noto-serif-ttf                    Noto Serif Fonts (Multi-lingual)"
    "openssh                           An open source implementation of SSH protocol version 2"
    "openssl                           Cryptographic tools required by many packages"
    "p7zip                             Very high compression ratio file archiver"
    "PackageKit                        Package management service"
    "pandoc                            general markup converter"
    "pkg-config                        manage compile and link flags for libraries"
    "plocate                           Fast filesystem search tool."
    "psensor                           Psensor is a graphical hardware temperature monitor for Linux"
    "powertop                          diagnose issues with power consumption and management"
    "pulseeffects                      advanced audio manipulation tools"
    "python3                           General-purpose, high-level programming language supporting multiple programming paradigms"
    "qrencode                          Generate QR 2D barcodes"
    "radeon-profile                    GUI for configuring AMD video cards"
    "rclone                            rsync for commercial cloud storage"
    "rclone-browser                    Simple cross platform GUI for rclone"
    "ripgrep                           combines the usability of The Silver Searcher with the raw speed of grep"
    "ripgrep-all                       allows you to search PDFs, e-books, Office documents, archive formats and more"
    "rsync                             A program for synchronizing files over a network"
    "rygel                             GNOME UPnP/DLNA services"
    "sassc                             Wrapper around libsass to compile CSS stylesheet"
    "screen                            A screen manager that supports multiple logins on one terminal"
    "socat                             Bidirectional data relay between two data channels ('netcat++')"
    "sshpass                           Non-interactive SSH authentication utility"
    "sxiv                              simple X image viewer"
    "tar                               GNU file archiving program"
    "thermald                          Thermal daemon for IA"
    "tlp                               feature-rich command-line utility, saving laptop battery power"
    "tumbler                           D-Bus service for applications to request thumbnails"
    "ufw                               Uncomplicated Firewall"
    "unrar                             Extract files from RAR archives."
    "unzip                             A utility for unpacking zip files"
    "variety                           Wallpaper changer, downloader and manager"
    "vgrep                             vgrep is a pager for navigating through grep output"
    "vim                               highly configurable text editor built to make creating and changing any kind of text very efficient"
    "virt-manager                      Desktop tool for managing virtual machines via libvirt"
    "wget                              A utility for retrieving files using the HTTP or FTP protocols"
    "wsdd                              Python Web Services Discovery Daemon, Windows Net Browsing"
    "xclip                             Command line clipboard grabber"
    "zip                               A file compression and packaging utility compatible with PKZIP"
    "zram-generator                    Systemd unit generator for zram swap devices"
    "zram-generator-defaults           Default configuration for zram-generator"
    "zstd                              compression library"
)

#echo "The following packages will be installed:"
#for ((i = 0; i < ${#software_packages[@]}; i++)); do
#    echo "- ${software_explanations[i]}"
#done
#
#echo
#read -p "Do you want to proceed with the installation? (y/n): " choice
#
#if [[ $choice =~ ^[Yy]$ ]]; then
#    echo "Installing the packages..."
#    sudo eopkg install -y "${software_packages[@]}"
#    echo "Package installation completed."
#else
#    echo "Package installation skipped."
#fi

# Install some software:
software_packages5=(
    akonadi akonadi-import-wizard akonadi-calendar blender boomaga digfikam flameshot gimp gimp-help gimp-daocs inkscape inkscape-docs kdepim-addons krita neochat rhythmbox scribus scribus-doc shotwell simplescreenrecorder uget vlc yakuake
    )

software_explanations5=(
    "akonadi                           KDE centralized database to store, index and retrieve the user's personal information"
    "akonadi-import-wizard             Assistant to import PIM data from other applications into Akonadi"
    "akonadi-calendar                  Library that effectively bridges the Akonadi client libraries and KCalCore library"
    "blender                           Very fast and versatile 3D modeller/renderer"
    "boomaga                           virtual printer for viewing a document before printing"
    "digikam                           A digital camera accessing & photo management application"
    "flameshot                         Powerful yet simple to use screenshot software."
    "gimp                              GNU Image Manipulation Program"
    "gimp-help                         English (US) help files Documentation for gimpfor GIMP"
    "gimp-docs                         Documentation for gimp"
    "inkscape                          vector-based drawing program"
    "inkscape-docs                     Documentation for inkscape"
    "kdepim-addons                     Additional plugins for KDE PIM applications"
    "krita                             pixel-based image manipulation program"
    "neochat                           Matrix client for desktop and mobile made by KDE"
    "rhythmbox                         Music player and organizer for GNOME."
    "scribus                           Open Source Desktop Page Layout"
    "scribus-doc                       Documentation for Scribus"
    "shotwell                          Digital Photo Organizer"
    "simplescreenrecorder              Feature-rich screen recorder for X11 and OpenGL"
    "uget                              easy-to-use download manager written in GTK+"
    "vlc                               Multimedia player and streaming server."
    "yakuake                           A drop-down terminal emulator"
)

echo "The following packages will be installed:"
for ((i = 0; i < ${#software_packages5[@]}; i++)); do
    echo "- ${software_explanations5[i]}"
done

echo
read -p "Do you want to proceed with the installation? (y/n): " choice

if [[ $choice =~ ^[Yy]$ ]]; then
    echo "Installing the packages..."
    sudo eopkg install -y "${software_packages5[@]}"
    echo "Package installation completed."
else
    echo "Package installation skipped."
fi

# Install gum : A tool for glamorous shell scripts. https://github.com/charmbracelet/gum
# sudo mkdir -p /etc/apt/keyrings
# curl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg
#echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" | sudo tee /etc/apt/sources.list.d/charm.list
# sudo apt update && sudo apt install gum

sudo eopkg install earlyoom
sudo systemctl enable --now earlyoom

# Support for additional file systems:
filesystem_packages=(
    apfs-fuse btrfs-progs disktype exfatprogs f2fs-tools fuse-sshfs fuse fuse2 selvm2 nilfs-utils ntfs-3g udftools xfsprogs
)

filesystem_explanations=(
    "apfs-fuse                A read-only FUSE driver for Apple's APFS"
    "btrfs-progs              Tools for managing Btrfs file systems."
    "disktype                 Detects the content format of a disk or disk image."
    "exfatprogs               Utilities for exFAT file system."
    "f2fs-tools               Utilities for Flash-Friendly File System (F2FS)."
    "fuse-sshfs               FUSE-Filesystem to access remote filesystems via SSH"
    "fuse                     File Systems in User Space"
    "fuse2                    File Systems in User Space"
    "lvm2                     Logical Volume Manager 2 utilities."
    "nilfs-utils              Utilities for managing NILFS v2 filesystems"
    "ntfs-3g                  Linux NTFS userspace driver"
    "udftools                 Tools for UDF (Universal Disk Format) file system."
    "xfsprogs                 Tools for managing XFS file systems."
)

echo "The following packages will be installed:"
for ((i = 0; i < ${#filesystem_packages[@]}; i++)); do
    echo "- ${filesystem_explanations[i]}"
done

echo
read -p "Do you want to proceed with the installation? (y/n): " choice

if [[ $choice =~ ^[Yy]$ ]]; then
    echo "Installing the packages..."
    sudo eopkg install -y "${filesystem_packages[@]}"
    echo "Package installation completed."
else
    echo "Package installation skipped."
fi

#################################################################################

# Installing fonts
sudo dnf install curl cabextract xorg-x11-font-utils fontconfig -y
sudo rpm -i https://downloads.sourceforge.net/project/mscorefonts2/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm

sudo apt install fonts-font-awesome
wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/FiraCode.zip
sudo unzip FiraCode.zip -d /usr/share/fonts
wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip
sudo unzip Meslo.zip -d /usr/share/fonts
wget https://github.com/tolgaerok/fonts-tolga/raw/main/WPS-FONTS.zip
sudo unzip WPS-FONTS.zip -d /usr/share/fonts/wps-office

# Reloading Font
sudo fc-cache -vf

# Removing zip Files
rm ./FiraCode.zip ./Meslo.zip ./WPS-FONTS.zip

	# Install some fonts
	display_message "[${GREEN}✔${NC}]  Installing some fonts"

	sudo eopkg install -y font-awesome-ttf powerline-fonts font-roboto-ttf font-firacode-{nerd,ttf} font-fira-ttf

	sudo mkdir -p ~/.local/share/fonts
	cd ~/.local/share/fonts && curl -fLO https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/DroidSansMono/DroidSansMNerdFont-Regular.otf
	wget https://github.com/tolgaerok/fonts-tolga/raw/main/WPS-FONTS.zip
	unzip WPS-FONTS.zip -d /usr/share/fonts

	zip_file="Apple-Fonts-San-Francisco-New-York-master.zip"

	# Check if the ZIP file exists
	if [ -f "$zip_file" ]; then
		# Remove existing ZIP file
		sudo rm -f "$zip_file"
		echo "Existing ZIP file removed."
	fi

	# Download the ZIP file
	curl -LJO https://github.com/tolgaerok/Apple-Fonts-San-Francisco-New-York/archive/refs/heads/master.zip

	# Check if the download was successful
	if [ -f "$zip_file" ]; then
		# Unzip the contents to the system-wide fonts directory
		sudo unzip -o "$zip_file" -d /usr/share/fonts/

		# Update font cache
		sudo fc-cache -f -v

		# Remove the ZIP file
		rm "$zip_file"

		display_message "[${GREEN}✔${NC}] Apple fonts installed successfully."
		echo ""
		gum spin --spinner dot --title "Re-thinking... 1 sec" -- sleep 2
	else
		display_message "[${RED}✘${NC}] Download failed. Please check the URL and try again."
		gum spin --spinner dot --title "Stand-by..." -- sleep 2
	fi

	# Removing zip Files
	rm ./WPS-FONTS.zip
	sudo fc-cache -f -v

####################################################

	# Enable trim support
	sudo systemctl enable fstrim.timer
#################################################

	# Audio
	[ -f /usr/bin/easyeffects ] && [ -f $HOME/.config/easyeffects/output/default.json ] && easyeffects -l default
	[ -f /usr/bin/pulseeffects ] && [ -f $HOME/.config/PulseEffects/output/default.json ] && pulseeffects -l default
-----------------------------------------------

	# Configure fortune
	# If you want to display a specific fortune file or category, you can use the -e option followed by the file or category name. For example:
	# fortune -e art ascii-art bofh-excuses computers cookie definitions disclaimer drugs education fortunes humorists kernelnewbies knghtbrd law linux literature miscellaneous news people riddles science
	# or to see a list:
	# fortune -f

	# Execute rygel to start DLNA sharing
	/usr/bin/rygel-preferences

	# Install profile-sync: it to manage browser profile(s) in tmpfs and to periodically sync back to the physical disc (HDD/SSD)
	# sudo dnf install profile-sync-daemon
	# /usr/bin/profile-sync-daemon preview
	# sudo dnf remove profile-sync-daemon
	# psd profile located in $HOME/.config/psd/psd.conf

-------------------------------------------

	display_message "[${GREEN}✔${NC}]  Installing GUM"

# Function to remove residual configuration files
function remove_residual_config_files() {
    packages=$(dpkg -l | awk '/^rc/ { print $2 }')
    if [ -n "$packages" ]; then
 #       sudo dpkg -P $packages
        echo "Residual configuration files removed."
    else
        echo "No residual configuration files found."
    fi
}

# Function to clear systemd journal logs
function clear_journal_logs() {
    sudo journalctl --vacuum-time=7d
    echo "Systemd journal logs cleared."
}

# Lets clean up
echo -e "\n\n----------------------------------------------"
echo -e "|     Let's clean up                         |"
echo -e "----------------------------------------------\n\n"
sudo update-grub
#sudo dnf -y up
#sudo dnf -y autoremove
#sudo dnf -y clean all
clear_journal_logs

echo -e "\n\n----------------------------------------------"
echo -e "|     Let's clean up your SSD                 |"
echo -e "----------------------------------------------\n\n"
sudo fstrim -av

echo -e "\n\n----------------------------------------------"
echo -e "|                                            |"
echo -e "|      Setup Complete! Enjoy Solus           |"
echo -e "|       Please run ___________.sh            |"
echo -e "|    to back up your data                    |"
echo -e "|                                            |"
echo -e "----------------------------------------------\n\n"

exit 0
